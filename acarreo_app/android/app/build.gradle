plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'dev.flutter.flutter-gradle-plugin'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace 'com.truckinginnovation.acarreo_app'
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId APP_BUNDLE
        applicationIdSuffix APP_SUFFIX
        resValue 'string', 'app_name', APP_NAME
        resValue 'string', 'gcm_defaultSenderId', FIREBASE_SENDER_ID
        resValue 'string', 'google_api_key', FIREBASE_API_KEY_ANDROID
        resValue 'string', 'google_app_id', FIREBASE_APP_ID_ANDROID
        resValue 'string', 'google_crash_reporting_api_key', FIREBASE_API_KEY_ANDROID
        resValue 'string', 'google_storage_bucket', FIREBASE_STORAGE_BUCKET
        resValue 'string', 'project_id', FIREBASE_PROJECT_ID

        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 23 // flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    flavorDimensions 'default'
    productFlavors {
        local {
            dimension 'default'
        }
        dev {
            dimension 'default'
        }
        prod {
            dimension 'default'
        }
    }

    signingConfigs {
        release {
            if (System.getenv('IS_CI_BUILD') == 'true') {
                keyAlias System.getProperty('APPCENTER_KEY_ALIAS')
                keyPassword System.getProperty('APPCENTER_KEY_PASSWORD')
                storeFile rootProject.file('app/upload-keystore.jks')
                storePassword System.getProperty('APPCENTER_KEYSTORE_PASSWORD')
            } else {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
                storePassword keystoreProperties['storePassword']
            }
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    def multidex_version = '2.0.1'
    implementation "androidx.multidex:multidex:$multidex_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
